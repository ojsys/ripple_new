name: Deploy Application

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check for linting errors
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exit-zero
        
    - name: Create deployment package
      run: |
        zip -r deploy.zip . -x "*.git*" "*.github*" "env/*"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: deploy-package
        path: deploy.zip

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || (github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master')
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: deploy-package
        
    - name: Deploy to staging server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        password: ${{ secrets.STAGING_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          mkdir -p ~/staging-deploy
          cd ~/staging-deploy
          rm -rf *
          echo "Deploying to staging environment..."
          
    - name: Upload to staging server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        password: ${{ secrets.STAGING_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        source: "deploy.zip"
        target: "~/staging-deploy"
        
    - name: Finalize staging deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USERNAME }}
        password: ${{ secrets.STAGING_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          cd ~/staging-deploy
          unzip -o deploy.zip
          source ~/venv/bin/activate
          pip install -r requirements.txt
          export DJANGO_SETTINGS_MODULE=ripple.settings_staging
          python manage.py migrate
          python manage.py collectstatic --noinput
          touch tmp/restart.txt
          echo "Staging deployment completed"

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: deploy-package
        
    - name: Deploy to production server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST || secrets.SSH_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME || secrets.SSH_USERNAME }}
        password: ${{ secrets.PRODUCTION_PASSWORD || secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          mkdir -p ~/production-deploy
          cd ~/production-deploy
          rm -rf *
          echo "Deploying to production environment..."
          
    - name: Upload to production server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST || secrets.SSH_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME || secrets.SSH_USERNAME }}
        password: ${{ secrets.PRODUCTION_PASSWORD || secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        source: "deploy.zip"
        target: "~/production-deploy"
        
    - name: Finalize production deployment
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PRODUCTION_HOST || secrets.SSH_HOST }}
        username: ${{ secrets.PRODUCTION_USERNAME || secrets.SSH_USERNAME }}
        password: ${{ secrets.PRODUCTION_PASSWORD || secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          cd ~/production-deploy
          unzip -o deploy.zip
          source ~/venv/bin/activate
          pip install -r requirements.txt
          export DJANGO_SETTINGS_MODULE=ripple.settings
          python manage.py migrate
          python manage.py collectstatic --noinput
          touch tmp/restart.txt
          echo "Production deployment completed"